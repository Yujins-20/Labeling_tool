<header class="mt-6 mx-auto max-w-screen-lg">
  <.breadcrumbs>
    <:crumb label={nil} to={Routes.live_path(@socket, HyacinthWeb.PipelineLive.Index)}>
      Pipelines
    </:crumb>
    <:crumb label="Pipeline" to={Routes.live_path(@socket, HyacinthWeb.PipelineLive.Show, @pipeline)}>
      <%= @pipeline.name %>
    </:crumb>
  </.breadcrumbs>

  <div class="w-full flex justify-between items-center">
    <h1 class="text-4xl"><%= @pipeline.name %></h1>
    <div class="">
      <.form let={f} for={@run_pipeline_changeset} phx-submit="run_pipeline_submit">
        <div class="filter-form-content space-x-4">
          <%= select f, :dataset_id, Enum.map(@datasets, &({&1.name, &1.id})), prompt: "Choose a Dataset" %>
          <%= submit "Run Pipeline", class: "btn btn-blue" %>
        </div>
      </.form>
    </div>
  </div>

  <div class="mt-4 text-xl border-b-2 border-gray-700">
    <div class="-mb-0.5">
      <.tab_button cur_tab={@tab} event="set_tab" tab="runs">Runs</.tab_button>
      <.tab_button cur_tab={@tab} event="set_tab" tab="steps">Steps</.tab_button>
    </div>
  </div>
</header>

<main class="mt-4 mx-auto max-w-screen-lg">
  <%= case @tab do %>
  <% :runs -> %>
    <div>
      <.form let={f} for={@run_filter_changeset} phx-change="run_filter_updated">
        <div class="filter-form-content flex justify-between items-center">
          <p>
            <%= text_input f, :search, placeholder: "Search runs...", class: "mr-2 w-80" %>
          </p>
          <div class="flex items-center space-x-3">
            <p>
              <%= label f, :status %>
              <%= select f, :status, humanize_enum(RunFilterForm, :status) %>
            </p>
            <p>
              <%= label f, :sort_by %>
              <%= select f, :sort_by, humanize_enum(RunFilterForm, :sort_by) %>
            </p>
            <p>
              <%= label f, :order %>
              <%= select f, :order, humanize_enum(RunFilterForm, :order) %>
            </p>
          </div>
        </div>
      </.form>

      <div class="mt-4 grid grid-cols-3 gap-4">
        <%= for %PipelineRun{} = run <- filter_runs(@pipeline.runs, @run_filter_changeset) do %>
          <%= live_redirect to: Routes.live_path(@socket, HyacinthWeb.PipelineRunLive.Show, run),
              class: "p-2 bg-gray-800 rounded border border-gray-700 hover:border-gray-500 transition" do %>
            <div class="flex justify-between items-start space-x-4">
              <div class="shrink">
                <span class="px-1 py-0.5 text-xs text-gray-400 bg-gray-700 rounded">Input</span>
                <span class="text-sm text-gray-300 font-medium"><%= hd(run.transform_runs).input.name %></span>
              </div>
              <div class="shrink-0">
                <%= case run.status do %>
                <% :running -> %>
                  <div class="pill pill-yellow">Running</div>
                <% :complete -> %>
                  <div class="pill pill-green">Complete</div>
                <% end %>
              </div>
            </div>

            <div class="mt-1 text-sm">
              <span class="text-gray-500">Ran by</span>
              <span class="text-gray-400"><%= run.ran_by.email %></span>
            </div>

            <div class="mt-2 text-sm text-gray-400">
              <%= for tr <- run.transform_runs do %>
                <div class="flex items-center space-x-1">
                  <div>
                    <%= case tr.status do %>
                    <% :waiting -> %>
                      <div class="text-gray-500 opacity-60">
                        <Icons.minus_circle_mini />
                      </div>
                    <% :running -> %>
                      <div class="text-yellow-400 opacity-60 animate-spin">
                        <Icons.refresh_mini />
                      </div>
                    <% :complete -> %>
                      <div class="text-green-400 opacity-40">
                        <Icons.check_circle_mini />
                      </div>
                    <% end %>
                  </div>
                  <div>Step <%= tr.order_index + 1 %></div>
                </div>
              <% end %>
            </div>

            <div class="mt-3">
              <%= if run.status == :complete do %>
                <div class="text-gray-500 text-xs">Completed <%= Calendar.strftime(run.completed_at, "%c") %></div>
              <% else %>
                <div class="text-gray-500 text-xs">Started <%= Calendar.strftime(run.inserted_at, "%c") %></div>
              <% end %>
            </div>
          <% end %>
        <% end %>
      </div>
    </div>

  <% :steps -> %>
    <div class="space-y-4">
      <%= for {transform, i} <- Enum.with_index(@transforms) do %>
        <div class="p-2 text-sm bg-gray-800 rounded border border-gray-700">
          <h2 class="text-xl text-gray-300">Transform #<%= i + 1 %></h2>
          <ul class="mt-2">
            <li>
              <span class="text-gray-400">Driver:</span>
              <span><%= transform.driver %></span>
            </li>
          </ul>
          <div class="mt-4">
            <h3 class="text-base text-gray-400">Driver Options</h3>
            <ul>
              <%= for {key, value} <- transform.options do %>
                <li>
                  <span class="text-gray-400"><%= key %>:</span>
                  <span><%= value %></span>
                </li>
              <% end %>
            </ul>
          </div>
        </div>
      <% end %>
    </div>
  <% end %>
</main>
