on: push

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: erlef/setup-beam@v1
        with:
          otp-version: 25
          elixir-version: 1.14
      - run: mix deps.get
      - run: mix test

  build-release-x64-debian10:
    runs-on: ubuntu-latest
    container:
      image: debian:buster
    steps:
      - name: Install Erlang/OTP and Elixir
        run: |
          apt-get update
          apt-get -y install wget gnupg build-essential
          wget https://packages.erlang-solutions.com/erlang-solutions_2.0_all.deb
          dpkg -i erlang-solutions_2.0_all.deb
          apt-get update
          apt-get -y install esl-erlang
          apt-get -y install elixir
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build release
        run: |
          export MIX_ENV=prod
          mix local.hex --force
          mix local.rebar --force
          mix deps.get --only prod
          mix compile
          mix assets.deploy
          mix release
      - name: Create release tarball
        run: tar -cvf hyacinth-x64-debian10.tar hyacinth
        working-directory: _build/prod/rel
      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: hyacinth-x64-debian10
          path: _build/prod/rel/hyacinth-x64-debian10.tar

  build-release-x64-centos-stream-8:
    runs-on: ubuntu-latest
    container:
      image: quay.io/centos/centos:stream8
    steps:
      - name: Install Erlang/OTP
        run: |
          dnf config-manager --set-enabled powertools
          dnf -y install epel-release epel-next-release
          dnf -y install wget
          wget https://packages.erlang-solutions.com/erlang-solutions-2.0-1.noarch.rpm
          dnf -y install erlang-solutions-2.0-1.noarch.rpm
          dnf -y install esl-erlang
      - name: Install precompiled Elixir
        run: |
          dnf -y install unzip
          wget https://github.com/elixir-lang/elixir/releases/download/v1.14.0/elixir-otp-24.zip
          mkdir ~/elixir
          unzip elixir-otp-24.zip -d ~/elixir
      - name: Define en_US.UTF-8 locale
        run: |
          dnf -y install glibc-locale-source glibc-langpack-en
          localedef -c -f UTF-8 -i en_US en_US.UTF-8
      - name: Install dev tools
        run: dnf -y install gcc make glibc-devel
      - name: Checkout repository
        uses: actions/checkout@v3
      - name: Build release
        run: |
          export LC_ALL=en_US.UTF-8
          export PATH="$PATH:$HOME/elixir/bin"
          export MIX_ENV=prod
          mix local.hex --force
          mix local.rebar --force
          mix deps.get --only prod
          mix compile
          mix assets.deploy
          mix release
      - name: Create release tarball
        run: tar -cvf hyacinth-x64-centos-stream-8.tar hyacinth
        working-directory: _build/prod/rel
      - name: Upload release artifact
        uses: actions/upload-artifact@v3
        with:
          name: hyacinth-x64-centos-stream-8
          path: _build/prod/rel/hyacinth-x64-centos-stream-8.tar
